swagger: "2.0"
info:
  description: "Services related to customer."
  version: "1.3.0"
  title: "Customer API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "IBM"
    url: "https://www.ibm.com/"
    email: "jyoungwa@ca.ibm.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "TBD"
basePath: "/api/v1/customer"
tags:
  - name: "CMS"
    description: "Operations for Adobe Experience Manager (CMS)"
  - name: "Days"
    description: "Operations for days"
  - name: "States"
    description: "Operations for states"
  - name: "Banks"
    description: "Operations for banks"
  - name: "Entitlements"
    description: "Operations for entitlements"
  - name: "RelationshipManager"
    description: "Operations for relationship manager"
  - name: "Heartbeats"
    description: "Health check operations"
schemes:
  - "https"
paths:
  "/content":
    get:
      tags:
        - "CMS"
      summary: "Get CMS Content"
      description: "Get CMS content based on content type"
      operationId: "getContentUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "contentPath"
          in: "query"
          description: "Content Path"
          required: true
          type: "string"
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "Client-Info"
          in: "header"
          description: "Application Name, Platform and Version. e.g. appname=cnb_mobile,platform=ios, version=v1.0"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/ContentResponse'
        '400':
          description: "1200: Invalid path parameter"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/days":
    get:
      tags:
        - "Days"
      summary: "Return all Calendar dates along with Business Day and Stock Market Day indicator."
      description: "Returns numberOfDays starting from current date.\nWhen isBusinessDay is true, only business days are returned.\nWhen isStockMarketDay is true, days when stock market is open are returned.\nWhen isBrokerage is true, Authorization header must be used. Also, the Payment Platform Service is used instead of Lookup Platform Service and the argument isStockMarketDay is ignored."
      operationId: "getDaysUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "numberOfDays"
          in: "query"
          description: "Number of days requested starting from current date."
          required: true
          type: "integer"
          format: "int32"
        - name: "isBusinessDay"
          in: "query"
          description: "Flag that indicates business day or a non-business day."
          required: false
          type: "boolean"
        - name: "isStockMarketDay"
          in: "query"
          description: "Flag that indicates if the Stock Market is open or closed."
          required: false
          type: "boolean"
        - name: "isBrokerage"
          in: "query"
          description: "Flag that indicates if a Brokerage Account is involved or not."
          required: false
          type: "boolean"
        - name: "Authorization"
          in: "header"
          description: "OAuth2 token"
          required: false
          type: "string"
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "Client-Info"
          in: "header"
          description: "Application Name, Platform and Version. e.g. appname=cnb_mobile,platform=ios, version=v1.0"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/DaysResponse'
        '400':
          description: "1200: Invalid path parameter"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/state-codes":
    get:
      tags:
        - "States"
      summary: "Return all US State codes and names."
      description: "Returns all US States with code and name values."
      operationId: "getStatesUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "Client-Info"
          in: "header"
          description: "Application Name, Platform and Version. e.g. appname=cnb_mobile,platform=ios, version=v1.0"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/StatesResponse'
        '400':
          description: "1200: Invalid path parameter"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/banks":
    get:
      tags:
        - "Banks"
      summary: "Return all US banks and their properites or properties of a specified bank."
      description: "Returns all US banks and their properties.\nIf a routingNumber is passed, the properties of just the specified bank is returned."
      operationId: "getBanksUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "Client-Info"
          in: "header"
          description: "Application Name, Platform and Version. e.g. appname=cnb_mobile,platform=ios, version=v1.0"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
        - name: "routingNumber"
          in: "query"
          description: "9-digit routing number used to specify a particular bank. If value passed, API will return just one bank"
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/BanksResponse'
        '400':
          description: "1200: Invalid path parameter"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/entitlements":
    get:
      tags:
        - "Entitlements"
      summary: "Return user entitlement flags at the feature-level."
      description: "Returns entitlement flags to indicate if the logged in user has access to the listed features."
      operationId: "getEntitlementsUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "OAuth2 token"
          required: true
          type: "string"
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "Client-Info"
          in: "header"
          description: "Application Name, Platform and Version. e.g. appname=cnb_mobile,platform=ios, version=v1.0"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/EntitlementsResponse'
        '400':
          description: "1200: Invalid path parameter"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: "1110: Invalid token in Authorization header"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/relationship-manager":
    get:
      tags:
        - "RelationshipManager"
      summary: "Get relationship manager info"
      description: "Return relationship manager name and contact number for a given customer"
      operationId: "getRelationshipManagerUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "OAuth2 token"
          required: true
          type: "string"
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "Client-Info"
          in: "header"
          description: "Application Name, Platform and Version. e.g. appname=cnb_mobile,platform=ios, version=v1.0"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/RelationshipManagerResponse'
        '400':
          description: "1201: Invalid or missing request parameter\r\n4500: Customer does not have a Relationship Manager"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: "1110: Invalid token in Authorization header"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
  "/heartbeats":
    get:
      tags:
        - "Heartbeats"
      summary: "Get service domain health check"
      description: "Return information on service domain, environment, circuit breaker status, and system status"
      operationId: "getHeartbeatUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "User-Agent"
          in: "header"
          description: "HTTP USER_AGENT"
          required: false
          type: "string"
        - name: "x-transaction-id"
          in: "header"
          description: "Unique transaction ID to provision cross tier traceability."
          required: false
          type: "string"
      responses:
        '200':
          description: "0: Success"
          schema:
            $ref: '#/definitions/HeartbeatResponse'
        '400':
          description: "1201: Invalid or missing request parameter"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: "1000: Unknown exception occurred"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: "1001: In Maintenance mode"
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  BanksResponse:
    type: "object"
    properties:
      banks:
        type: "array"
        items:
          $ref: '#/definitions/Bank'
        description: "List of banks"
  HeartbeatResponse:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "Service domain name"
        example: "customer"
      type:
        type: "string"
        description: "exp (Outer API) or prc (Inner API) service"
        example: "exp"
      version:
        type: "string"
        description: "Service version"
        example: "1.1.2"
      environment:
        type: "string"
        description: "Deployed environment"
        example: "dev"
      circuit_status:
        type: "string"
        description: "Overall circuit breaker status across all services - 'closed' (all closed) or 'open' (one or more are open)"
        example: "closed"
      system_status_code:
        type: "string"
        description: "Overall system status code - 'ok' (all good) or 'error' (one or more systems not running normally)"
        example: "ok"
      system_status_detail:
        type: "string"
        description: "Specific details if system status code is 'error'"
        example: ""
  ContentResponse:
    type: "object"
    properties:
      content:
        type: "string"
        description: "CMS content (JSON represented as string) associated with given contentPath"
        example: "[{ topic: 'View Accounts & Activity', title: '', description: '' }, { topic: 'View Accounts & Activity', title: '', description: '' }, { topic: 'View Accounts & Activity', title: '', description: '' }]"
  DaysResponse:
    type: "object"
    properties:
      days:
        type: "array"
        items:
          $ref: '#/definitions/Day'
        description: "List of Calendar Days"
  EntitlementsResponse:
    type: "object"
    properties:
      entitlements:
        type: "array"
        items:
          $ref: '#/definitions/Entitlement'
        description: "List of features that the user meet the minimum entitlement requirment for. Features in this list can be shown to the user."
  Bank:
    type: "object"
    properties:
      routing_number:
        type: "string"
        description: "routing number specific to the bank"
        example: "021000089"
      bank_name:
        type: "string"
        description: "name of the bank"
        example: "Citibank Na"
      bank_city:
        type: "string"
        description: "city of the bank"
        example: "New Castle"
      bank_state:
        type: "string"
        description: "state of the bank"
        example: "DE"
  Day:
    type: "object"
    properties:
      calendar_date:
        type: "string"
        description: "ISO8601 Calendar date formatted as yyyy-mm-ddTHH:MM:SS"
        example: "2019-07-04T00:00:00"
      business_day:
        type: "boolean"
        description: "Flag indicating if current date is a business day or not."
        example: "false"
      stock_market_day:
        type: "boolean"
        description: "Flag indicating if stock market is open on the current date or not."
        example: "true"
  StatesResponse:
    type: "object"
    properties:
      states:
        type: "array"
        items:
          $ref: '#/definitions/State'
        description: "List of US States"
  State:
    type: "object"
    properties:
      code:
        type: "string"
        description: "State short code"
        example: "CA"
      name:
        type: "string"
        description: "State name"
        example: "California"
  Entitlement:
    type: "object"
    properties:
      id:
        type: "string"
        enum:
          - "a2a_transfer"
          - "bill_payment"
          - "remote_check_deposit"
          - "p2p_transfer"
          - "wire_transfer"
          - "credit_card_payment"
          - "cardless_cash"
        description: "Identifies the feature that the user is entitled to see"
        example: "a2a_transfers"
      state:
        type: "string"
        enum:
          - "ACCOUNT_AVAILABLE"
          - "ACCOUNT_AVAILABLE_NOT_ENROLLED"
          - "ACCOUNT_AVAILABLE_ENROLLED"
          - "ACCOUNT_AVAILABLE_ENROLLMENT_REVOKED"
        description: "indicates the level of entitlement that the user has for the particular feature"
        example: "ACCOUNT_AVAILABLE_NOT_ENROLLED"
  RelationshipManagerResponse:
    type: "object"
    properties:
      first_name:
        type: "string"
        description: "Relationship manager's first name"
        example: "Sally"
      last_name:
        type: "string"
        description: "Relationship manager's last name"
        example: "Smith"
      phone_number:
        type: "string"
        description: "Relationship manager's phone number"
        example: "(818) 555-1545"
  ErrorResponse:
    type: "object"
    required:
      - "error_code"
      - "error_message"
    properties:
      error_code:
        type: "string"
        description: "Error code"
      error_message:
        type: "string"
        description: "Error message"